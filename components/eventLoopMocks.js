// eventLoopMocks.js - –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ Event Loop

export const eventLoopDemos = [
    {
      name: 'Event Loop: –û—Å–Ω–æ–≤—ã',
      code: `// –û—Å–Ω–æ–≤—ã Event Loop
  console.log('–ù–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞');
  
  // –ó–∞–¥–µ—Ä–∂–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–ª–±—ç–∫–∞ –Ω–∞ 0–º—Å
  setTimeout(() => {
    console.log('–¢–∞–π–º–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω!');
  }, 0);
  
  console.log('–ö–æ–Ω–µ—Ü —Å–∫—Ä–∏–ø—Ç–∞');
  
  // –†–µ–∑—É–ª—å—Ç–∞—Ç:
  // –ù–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞
  // –ö–æ–Ω–µ—Ü —Å–∫—Ä–∏–ø—Ç–∞
  // –¢–∞–π–º–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω!`,
      steps: [
        {
          title: '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Event Loop',
          description: 'Event Loop - —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º –≤ JavaScript, –∫–æ—Ç–æ—Ä—ã–π –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞, –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–±—ã—Ç–∏–π, –∫–æ–ª–±—ç–∫–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –∑–∞–¥–∞—á. –û–Ω —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Å—Ç–µ–∫–∞ –≤—ã–∑–æ–≤–æ–≤ (Call Stack), –æ—á–µ—Ä–µ–¥–µ–π –∑–∞–¥–∞—á –∏ –º–µ—Ö–∞–Ω–∏–∑–º–∞ Web API.',
          action: (state) => {
            state.callStack = [{id: 1, name: 'main()', executing: true}];
            state.isLoopActive = true;
          }
        },
        {
          title: '–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è',
          description: 'JavaScript - –æ–¥–Ω–æ–ø–æ—Ç–æ—á–Ω—ã–π —è–∑—ã–∫. –í–µ—Å—å –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –æ–¥–Ω–æ–º –ø–æ—Ç–æ–∫–µ, –∏ —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç, –≥–¥–µ –∏–º–µ–Ω–Ω–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã.',
          action: (state) => {
            state.isLoopActive = false;
            state.callStack = [
              {id: 1, name: 'main()', executing: true},
              {id: 2, name: 'console.log("–ù–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞")', executing: false}
            ];
          }
        },
        {
          title: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ log-—Ñ—É–Ω–∫—Ü–∏–∏',
          description: '–ü–µ—Ä–≤—ã–π –≤—ã–∑–æ–≤ <code>console.log()</code> –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏ –≤—ã–≤–æ–¥–∏—Ç "–ù–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞" –≤ –∫–æ–Ω—Å–æ–ª—å.',
          action: (state) => {
            state.callStack = [
              {id: 1, name: 'main()', executing: false},
              {id: 2, name: 'console.log("–ù–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞")', executing: true}
            ];
          }
        },
        {
          title: '–í—ã–∑–æ–≤ setTimeout()',
          description: '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è <code>setTimeout()</code> –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è - —á–∞—Å—Ç—å Web API, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–æ–º.',
          action: (state) => {
            state.callStack = [
              {id: 1, name: 'main()', executing: false},
              {id: 3, name: 'setTimeout(..., 0)', executing: true, async: true}
            ];
          }
        },
        {
          title: 'setTimeout() —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–ª–±—ç–∫',
          description: '–§—É–Ω–∫—Ü–∏—è <code>setTimeout()</code> –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ, –Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç–∞–π–º–µ—Ä –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—é. –î–∞–∂–µ —Å –≤—Ä–µ–º–µ–Ω–µ–º 0–º—Å, –∫–æ–ª–±—ç–∫ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ!',
          action: (state) => {
            state.callStack = [{id: 1, name: 'main()', executing: true}];
            state.webAPIs = [{
              id: 1,
              name: 'setTimeout(callback, 0)',
              type: 'timer',
              processing: true,
              timer: true,
              timeRemaining: 0
            }];
          }
        },
        {
          title: '–í—Ç–æ—Ä–æ–π console.log()',
          description: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞, –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤ <code>console.log()</code>.',
          action: (state) => {
            state.callStack = [
              {id: 1, name: 'main()', executing: false},
              {id: 4, name: 'console.log("–ö–æ–Ω–µ—Ü —Å–∫—Ä–∏–ø—Ç–∞")', executing: true}
            ];
          }
        },
        {
          title: '–¢–∞–π–º–µ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è',
          description: '–¢–∞–π–º–µ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–≤–æ—é —Ä–∞–±–æ—Ç—É, –Ω–æ –µ–≥–æ –∫–æ–ª–±—ç–∫ –ù–ï –ø–æ–ø–∞–¥–∞–µ—Ç —Å—Ä–∞–∑—É –≤ —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤! –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –æ–Ω –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á (Task Queue).',
          action: (state) => {
            state.callStack = [{id: 1, name: 'main()', executing: true}];
            state.webAPIs = [];
            state.taskQueue = [{
              id: 5,
              name: 'setTimeout callback',
              source: 'setTimeout',
              next: false
            }];
          }
        },
        {
          title: '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞',
          description: '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è, –∏ –≤—ã–∑–æ–≤ <code>main()</code> —É–¥–∞–ª—è–µ—Ç—Å—è –∏–∑ —Å—Ç–µ–∫–∞.',
          action: (state) => {
            state.callStack = [];
            state.isLoopActive = true;
          }
        },
        {
          title: 'Event Loop –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—á–µ—Ä–µ–¥–∏',
          description: '–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ –ø—É—Å—Ç! –¢–µ–ø–µ—Ä—å Event Loop –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—á–µ—Ä–µ–¥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–±—ç–∫–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. Event Loop –≤—Å–µ–≥–¥–∞ —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—á–µ—Ä–µ–¥—å –º–∏–∫—Ä–æ–∑–∞–¥–∞—á, –∞ –∑–∞—Ç–µ–º –æ—á–µ—Ä–µ–¥—å –∑–∞–¥–∞—á.',
          action: (state) => {
            state.isLoopActive = true;
            state.taskQueue = [{
              id: 5,
              name: 'setTimeout callback',
              source: 'setTimeout',
              next: true
            }];
          }
        },
        {
          title: 'Event Loop –±–µ—Ä–µ—Ç –∫–æ–ª–±—ç–∫ –∏–∑ –æ—á–µ—Ä–µ–¥–∏',
          description: 'Event Loop –±–µ—Ä–µ—Ç –ø–µ—Ä–≤—ã–π –∫–æ–ª–±—ç–∫ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—á –∏ –ø–æ–º–µ—â–∞–µ—Ç –µ–≥–æ –≤ —Å—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.',
          action: (state) => {
            state.callStack = [{
              id: 5, 
              name: 'setTimeout callback', 
              executing: true
            }];
            state.taskQueue = [];
            state.isLoopActive = false;
          }
        },
        {
          title: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–ª–±—ç–∫–∞ setTimeout',
          description: '–ö–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—è <code>setTimeout</code> –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∏ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è <code>console.log()</code> –≤–Ω—É—Ç—Ä–∏ –Ω–µ–µ.',
          action: (state) => {
            state.callStack = [
              {id: 5, name: 'setTimeout callback', executing: false},
              {id: 6, name: 'console.log("–¢–∞–π–º–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω!")', executing: true}
            ];
          }
        },
        {
          title: '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–æ–ª–±—ç–∫–∞',
          description: '–ö–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ—Ç—Å—è –∏–∑ —Å—Ç–µ–∫–∞. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–æ.',
          action: (state) => {
            state.callStack = [];
            state.isLoopActive = true;
          }
        },
        {
          title: 'Event Loop –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É',
          description: 'Event Loop –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è! –û–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∑–∞–¥–∞—á–∏ –≤ –æ—á–µ—Ä–µ–¥—è—Ö –∏–ª–∏ –µ—Å—Ç—å –ª–∏ —Å–æ–±—ã—Ç–∏—è, —Ç—Ä–µ–±—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏, –ø–æ–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞.',
          action: (state) => {
            state.isLoopActive = true;
          }
        },
      ]
    },
    {
      name: '–ú–∞–∫—Ä–æ vs –ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏',
      code: `// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á –Ω–∞–¥ –º–∞–∫—Ä–æ–∑–∞–¥–∞—á–∞–º–∏
  console.log('üöÄ –ù–∞—á–∞–ª–æ');
  
  // –ú–∞–∫—Ä–æ–∑–∞–¥–∞—á–∞ (setTimeout)
  setTimeout(() => {
    console.log('‚è∞ –ú–∞–∫—Ä–æ–∑–∞–¥–∞—á–∞ (setTimeout)');
  }, 0);
  
  // –ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞ 1 (Promise)
  Promise.resolve().then(() => {
    console.log('üîµ –ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞ 1 (Promise)');
    
    // –í–ª–æ–∂–µ–Ω–Ω–∞—è –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞
    Promise.resolve().then(() => {
      console.log('üî∑ –í–ª–æ–∂–µ–Ω–Ω–∞—è –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞');
    });
  });
  
  // –ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞ 2 (Promise)
  Promise.resolve().then(() => {
    console.log('üîµ –ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞ 2 (Promise)');
  });
  
  console.log('üèÅ –ö–æ–Ω–µ—Ü');
  
  // –†–µ–∑—É–ª—å—Ç–∞—Ç:
  // üöÄ –ù–∞—á–∞–ª–æ
  // üèÅ –ö–æ–Ω–µ—Ü
  // üîµ –ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞ 1 (Promise)
  // üîµ –ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞ 2 (Promise)
  // üî∑ –í–ª–æ–∂–µ–Ω–Ω–∞—è –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞
  // ‚è∞ –ú–∞–∫—Ä–æ–∑–∞–¥–∞—á–∞ (setTimeout)`,
      steps: [
        {
          title: '–ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏ vs –ú–∞–∫—Ä–æ–∑–∞–¥–∞—á–∏',
          description: '–í Event Loop —Å—É—â–µ—Å—Ç–≤—É—é—Ç –¥–≤–∞ —Ç–∏–ø–∞ –∑–∞–¥–∞—á: <br>‚Ä¢ <b>–ú–∞–∫—Ä–æ–∑–∞–¥–∞—á–∏</b> (Tasks): setTimeout, setInterval, I/O, —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥<br>‚Ä¢ <b>–ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏</b> (Microtasks): Promise, queueMicrotask, MutationObserver',
          action: (state) => {
            state.callStack = [{id: 1, name: 'main()', executing: true}];
            state.isLoopActive = true;
          }
        },
        {
          title: '–ü–æ—Ä—è–¥–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è',
          description: 'Event Loop –≤—Å–µ–≥–¥–∞ —Å–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç <strong>–≤—Å–µ</strong> –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏, –∏ —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –±–µ—Ä—ë—Ç –æ–¥–Ω—É –º–∞–∫—Ä–æ–∑–∞–¥–∞—á—É. –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–∑–∞–¥–∞—á–∏ –æ–Ω —Å–Ω–æ–≤–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏.',
          action: (state) => {
            state.callStack = [{id: 1, name: 'main()', executing: true}];
            state.isLoopActive = true;
          }
        },
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è —ç—Ç–æ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏...
      ]
    },
    {
      name: 'async/await –≤ Event Loop',
      code: `// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è async/await –≤ Event Loop
  console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–∫—Ä–∏–ø—Ç–∞');
  
  // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
  async function fetchData() {
    console.log('üì• –í–Ω—É—Ç—Ä–∏ async —Ñ—É–Ω–∫—Ü–∏–∏');
    
    // await –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    // –∏ –Ω–µ—è–≤–Ω–æ —Å–æ–∑–¥–∞–µ—Ç Promise
    const data = await new Promise(resolve => {
      setTimeout(() => {
        console.log('‚è±Ô∏è –¢–∞–π–º–µ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è');
        resolve('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã');
      }, 1000);
    });
    
    console.log('üìã –†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:', data);
    
    return '‚úÖ –ì–æ—Ç–æ–≤–æ!';
  }
  
  // –í—ã–∑–æ–≤ async —Ñ—É–Ω–∫—Ü–∏–∏
  fetchData().then(result => {
    console.log('üèÜ –†–µ–∑—É–ª—å—Ç–∞—Ç:', result);
  });
  
  console.log('üèÅ –ö–æ–Ω–µ—Ü —Å–∫—Ä–∏–ø—Ç–∞');`,
      steps: [
        {
          title: 'async/await –∏ Event Loop',
          description: '<code>async/await</code> - —ç—Ç–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–π —Å–∞—Ö–∞—Ä –Ω–∞–¥ –ø—Ä–æ–º–∏—Å–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º. –ù–æ –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º?',
          action: (state) => {
            state.callStack = [{id: 1, name: 'main()', executing: true}];
            state.isLoopActive = true;
          }
        },
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è —ç—Ç–æ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏...
      ]
    },
    {
      name: '–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∏ Event Loop',
      code: `// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è Event Loop —Å —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
  document.getElementById('button').addEventListener('click', () => {
    console.log('üñ±Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞');
    
    // –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞
    const start = Date.now();
    while (Date.now() - start < 2000) {
      // –¢—è–∂–µ–ª—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ 2 —Å–µ–∫—É–Ω–¥—ã
    }
    
    console.log('üîÑ –í—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã');
    
    // –ò–∑–º–µ–Ω–µ–Ω–∏–µ DOM
    document.getElementById('result').textContent = '–ì–æ—Ç–æ–≤–æ!';
    
    // –ó–∞–¥–∞—á–∞, –æ—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —Ü–∏–∫–ª —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
    requestAnimationFrame(() => {
      console.log('üé® –ü–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º');
    });
  });
  
  // –ù–∞–±–ª—é–¥–∞–µ–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
  new MutationObserver(() => {
    console.log('üëÅÔ∏è DOM –∏–∑–º–µ–Ω–µ–Ω');
  }).observe(document.body, { 
    childList: true, 
    subtree: true 
  });`,
      steps: [
        {
          title: '–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∏ Event Loop',
          description: 'Event Loop –Ω–µ —Ç–æ–ª—å–∫–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç JavaScript, –Ω–æ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –º–µ–∂–¥—É –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –º–∞–∫—Ä–æ–∑–∞–¥–∞—á.',
          action: (state) => {
            state.callStack = [];
            state.isLoopActive = true;
          }
        },
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —à–∞–≥–∏ –¥–ª—è —ç—Ç–æ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏...
      ]
    }
  ];
  
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
  export const getAPIIcon = (type) => {
    switch (type) {
      case 'timer': return 'far fa-clock';
      case 'network': return 'fas fa-globe';
      case 'dom': return 'fas fa-code';
      default: return 'fas fa-cog';
    }
  };